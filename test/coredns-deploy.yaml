apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    objectset.rio.cattle.io/applied: H4sIAAAAAAAA/5xV23LjNgz9lQ6e5YtydTTTh22cdjNtXE8u+7Lj2YEpyGZNESoJeePJ6N87kGzHSbPZbZ9MkwfAweEh9ARY2U8UomUPGWBVxcE6hQRW1ueQwZgqx5uSvEACJQnmKAjZE6D3LCiWfdS/PP+LjESSfrDcNyjiqG95YDUJJN8856+eQm+xXkEGq+N4cLJOk59+tz7/+UOes/9uCo8lQQaGA+U+/hA8Vmg0ZlXPqRc3UaiEJgGHc3JtU6tR7GFV7SBdXl0GT0JRs23LXnKg8eTunbJLjEvIYG7oaHR8dDEapen5yTEOj0dnOD9Nh8VRcXZOxfnJ0cnQnJ4rkX+19A7pWJFRypEcGeGg6xLFLP94r5tGIyWg0GKjkMDOWb94qHIU6lI8Pnhco3U4dwRZ2iQgm0oJ3L7A6j6VldvFHTjlXT2bA+6GvaD1FCJkn58Aw0IX0DPsC0hgQGIGWzEGKnhhHcEsAVviQhkF9GZJYYfpbX+ztH/Wv4Atblo7N2VnzQYyuC4mLNNAsfO3s2vyFOM08Lxto0Dr6kD3y0BxyS6H7DSBpUj1G4meVyh6qYMloZMlJFBxEMhGw9EwgWiW1F7gx/v7qQpkvRWLbkwON3dk2OcRsjNF1sZQjAdl0gTElsS17IGnbzlC63Vq7cWbthROj/foLTKwsGEHGTyMlc53Qnpiqpdh95dvhl2kB4ElSbAmvhE4SyAQ5vZ/6auRm2d501H6o/Km/0XeQJHrYKg1q7OlldiZueSgdknPhzcWWuDfNcXu1FS1Hg2HZTsht9AOqeYmUwcrm0v2Qo9tV+gcf50Gu7aOFnQVDbp2kEJWoIuUgMEK59ZZsR0VzHN9CJOr+y+/XE/GX+6ubj9dX16p9/PAlZ6hczBrOo3/9G5zyyy/WkfbCZFJqKlJYM2uLumGa7+1TanL6VbmgwcGB2bzhV30ukh4rrDNOdObzX3cv6kxFVg7fU6ec7o7mEdzEuy/HJ8cIQNnff3YDjEKa2vogzHKavLa7MKOwu6T8/kJVqT1LoMVa9C1n4nYMkuAK0VqWbh6tHpT6lwqCjICGUz4ziwpr5021KVRsr3Ajl4xLDEKhbdTznaC7p9gYRc3WGmzVqh8QXM3sJKdq/c7Sq0DTTinj6y596jnLS33agA037ilZtY0TfNPAAAA//+Y+WTs3AcAAA
    objectset.rio.cattle.io/id: ""
    objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
    objectset.rio.cattle.io/owner-name: coredns
    objectset.rio.cattle.io/owner-namespace: kube-system
  creationTimestamp: "2020-11-06T07:28:17Z"
  generation: 1
  labels:
    k8s-app: kube-dns
    kubernetes.io/name: CoreDNS
    objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:deployment.kubernetes.io/revision: {}
          f:objectset.rio.cattle.io/applied: {}
          f:objectset.rio.cattle.io/id: {}
          f:objectset.rio.cattle.io/owner-gvk: {}
          f:objectset.rio.cattle.io/owner-name: {}
          f:objectset.rio.cattle.io/owner-namespace: {}
        f:labels:
          .: {}
          f:k8s-app: {}
          f:kubernetes.io/name: {}
          f:objectset.rio.cattle.io/hash: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector:
          f:matchLabels:
            .: {}
            f:k8s-app: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:k8s-app: {}
          f:spec:
            f:containers:
              k:{"name":"coredns"}:
                .: {}
                f:args: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:livenessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":53,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":53,"protocol":"UDP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":9153,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:readinessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:resources:
                  .: {}
                  f:limits:
                    .: {}
                    f:memory: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:securityContext:
                  .: {}
                  f:allowPrivilegeEscalation: {}
                  f:capabilities:
                    .: {}
                    f:add: {}
                    f:drop: {}
                  f:readOnlyRootFilesystem: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/etc/coredns"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
            f:dnsPolicy: {}
            f:nodeSelector:
              .: {}
              f:beta.kubernetes.io/os: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:serviceAccount: {}
            f:serviceAccountName: {}
            f:terminationGracePeriodSeconds: {}
            f:tolerations: {}
            f:volumes:
              .: {}
              k:{"name":"config-volume"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:items: {}
                  f:name: {}
                f:name: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: k3s
    operation: Update
    time: "2020-12-07T13:23:03Z"
  name: coredns
  namespace: kube-system
  resourceVersion: "499301"
  selfLink: /apis/apps/v1/namespaces/kube-system/deployments/coredns
  uid: aa56f1f0-6b95-45ad-b511-860ab2d777ee
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: kube-dns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: rancher/coredns-coredns:1.6.9
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        beta.kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: coredns
      serviceAccountName: coredns
      terminationGracePeriodSeconds: 30
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: Corefile
            path: Corefile
          - key: NodeHosts
            path: NodeHosts
          name: coredns
        name: config-volume
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2020-11-06T07:28:31Z"
    lastUpdateTime: "2020-11-06T07:28:31Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2020-11-06T07:28:31Z"
    lastUpdateTime: "2020-11-06T07:30:01Z"
    message: ReplicaSet "coredns-7944c66d8d" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
